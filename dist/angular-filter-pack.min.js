/*! angular-filter-pack 21-01-2014 */
!function(){angular.module("angularFilterPack.config",[]),angular.module("angularFilterPack.services",[]),angular.module("angularFilterPack.filters",["angularFilterPack.services"]),angular.module("angularFilterPack",["angularFilterPack.config","angularFilterPack.services","angularFilterPack.filters"]),angular.module("angularFilterPack.filters").filter("dasherize",["filterPack",function(a){return a.dasherize}]),angular.module("angularFilterPack.filters").filter("slugify",["filterPack",function(a){return a.slugify}]),angular.module("angularFilterPack.filters").filter("trim",["filterPack",function(a){return a.trim}]),angular.module("angularFilterPack.services").provider("filterPack",[function(){this.$get=function(){function a(){}return a.prototype.escapeRegExp=function(a){return String(a).replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")},a.prototype.slugify=function(b){return angular.isString(b)?(b=b.toLowerCase().replace(/\s+/g,"-").replace(/[^\w\-]+/g,"").replace(/\-\-+/g,"-"),a.prototype.trim(b,"-")):b},a.prototype.dasherize=function(b){return angular.isString(b)?(b=a.prototype.trim(b),b=b.replace(/([A-Z])/g,"-$1").replace(/[-_\s]+/g,"-").toLowerCase(),a.prototype.trim(b,"-")):b},a.prototype.trim=function(a,b){if(!angular.isString(a))return a;if(!b){if(String.prototype.trim)return String.prototype.trim.call(a);b="\\s"}return String(a).replace(new RegExp("^"+b+"+|"+b+"+$","g"),"")},new a},this.$get.$inject=[]}])}(window,document);